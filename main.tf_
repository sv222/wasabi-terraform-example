#  For the demonstration all code in one place.
#  Comment main.tf before running terraform apply

############################################################################ A list of providers

# Source: https://registry.terraform.io/providers/terrabitz/wasabi/latest

terraform {
  required_providers {
    wasabi = {
      source  = "terrabitz/wasabi"
      version = "4.1.3"
    }
  }
}

provider "wasabi" {
  region     = var.region
  access_key = var.access_key
  secret_key = var.secret_key
}

############################################################################# s3 backend

# TODO: Need to check for wasabi configuration and possiblility to use dynamo_db alternative in wasabi for state locking

# # s3 backend
# terraform {
#   backend "s3" {
#     bucket = "XXXXXXXX-wasabi-state-file"
#     key    = "wasabi/tfstate_files/project.tfstate"
#     region = "us-east-1"
#     dynamodb_table = "terraform-locks"
#     encrypt        = true
#   }
# }

# local backend
terraform {
  backend "local" {
    path = "terraform.tfstate"
  }
}

############################################################################# A list of buckets

resource "wasabi_bucket" "sales_data_bucket" {
  bucket = "sales-data-bucket"
}

resource "wasabi_bucket" "marketing_data_bucket" {
  bucket = "marketing-data-bucket"
}

resource "wasabi_bucket" "engineering_data_bucket" {
  bucket = "engineering-data-bucket"
}

resource "wasabi_bucket" "finance_data_bucket" {
  bucket = "finance-data-bucket"
}

resource "wasabi_bucket" "operations_data_bucket" {
  bucket = "operations-data-bucket"
}

############################################################################# A list of policies

# TODO: Verify policy accuracy in Wasabi documentation and comparability with AWS S3

# Read-Only Policy
# Reference: https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AmazonS3ReadOnlyAccess.html

data "wasabi_policy_document" "read_only" {
  statement {
    sid = "ReadOnlyAccess"

    actions = [
      "s3:Get*",
      "s3:List*",
      "s3:Describe*",
    ]

    resources = [
      "arn:aws:s3:::sales-data-bucket",
      "arn:aws:s3:::sales-data-bucket/*",
      "arn:aws:s3:::marketing-data-bucket",
      "arn:aws:s3:::marketing-data-bucket/*",
      "arn:aws:s3:::engineering-data-bucket",
      "arn:aws:s3:::engineering-data-bucket/*",
      "arn:aws:s3:::finance-data-bucket",
      "arn:aws:s3:::finance-data-bucket/*",
      "arn:aws:s3:::operations-data-bucket",
      "arn:aws:s3:::operations-data-bucket/*"
    ]
  }
}

# Read-Write Policy
# Reference: https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_examples_s3_rw-bucket.html

data "wasabi_policy_document" "read_write" {
  statement {
    sid = "ReadWriteAccess"

    actions = [
      "s3:*Object*",
      "s3:ListBucket",
    ]

    resources = [
      "arn:aws:s3:::sales-data-bucket",
      "arn:aws:s3:::sales-data-bucket/*",
      "arn:aws:s3:::marketing-data-bucket",
      "arn:aws:s3:::marketing-data-bucket/*",
      "arn:aws:s3:::engineering-data-bucket",
      "arn:aws:s3:::engineering-data-bucket/*",
      "arn:aws:s3:::finance-data-bucket",
      "arn:aws:s3:::finance-data-bucket/*",
      "arn:aws:s3:::operations-data-bucket",
      "arn:aws:s3:::operations-data-bucket/*"
    ]
  }
}

############################################################################# A list of users

resource "wasabi_user" "users" {
  for_each = toset(var.user_names)
  name     = each.value
  lifecycle {
    ignore_changes = [name]
  }
}

############################################################################# Attach policies to the users

# Alice's Permissions
resource "wasabi_bucket_policy" "alice_sales_data_bucket_rw" {
  bucket = wasabi_bucket.sales_data_bucket.id
  policy = data.wasabi_policy_document.read_write.json
}

resource "wasabi_bucket_policy" "alice_marketing_data_bucket_rw" {
  bucket = wasabi_bucket.marketing_data_bucket.id
  policy = data.wasabi_policy_document.read_write.json
}

resource "wasabi_bucket_policy" "alice_engineering_data_bucket_ro" {
  bucket = wasabi_bucket.engineering_data_bucket.id
  policy = data.wasabi_policy_document.read_only.json
}

# Bob's Permissions (All Buckets Read-Write)
resource "wasabi_bucket_policy" "bob_sales_data_bucket_rw" {
  bucket = wasabi_bucket.sales_data_bucket.id
  policy = data.wasabi_policy_document.read_write.json
}

resource "wasabi_bucket_policy" "bob_marketing_data_bucket_rw" {
  bucket = wasabi_bucket.marketing_data_bucket.id
  policy = data.wasabi_policy_document.read_write.json
}

resource "wasabi_bucket_policy" "bob_engineering_data_bucket_rw" {
  bucket = wasabi_bucket.engineering_data_bucket.id
  policy = data.wasabi_policy_document.read_write.json
}

resource "wasabi_bucket_policy" "bob_finance_data_bucket_rw" {
  bucket = wasabi_bucket.finance_data_bucket.id
  policy = data.wasabi_policy_document.read_write.json
}

resource "wasabi_bucket_policy" "bob_operations_data_bucket_rw" {
  bucket = wasabi_bucket.operations_data_bucket.id
  policy = data.wasabi_policy_document.read_write.json
}

# Charlie's Permissions
resource "wasabi_bucket_policy" "charlie_operations_data_bucket_rw" {
  bucket = wasabi_bucket.operations_data_bucket.id
  policy = data.wasabi_policy_document.read_write.json
}

resource "wasabi_bucket_policy" "charlie_finance_data_bucket_ro" {
  bucket = wasabi_bucket.finance_data_bucket.id
  policy = data.wasabi_policy_document.read_only.json
}

# Backup User's Permissions (All Buckets Read-Only)
resource "wasabi_bucket_policy" "backup_sales_data_bucket_ro" {
  bucket = wasabi_bucket.sales_data_bucket.id
  policy = data.wasabi_policy_document.read_only.json
}

resource "wasabi_bucket_policy" "backup_marketing_data_bucket_ro" {
  bucket = wasabi_bucket.marketing_data_bucket.id
  policy = data.wasabi_policy_document.read_only.json
}

resource "wasabi_bucket_policy" "backup_engineering_data_bucket_ro" {
  bucket = wasabi_bucket.engineering_data_bucket.id
  policy = data.wasabi_policy_document.read_only.json
}

resource "wasabi_bucket_policy" "backup_finance_data_bucket_ro" {
  bucket = wasabi_bucket.finance_data_bucket.id
  policy = data.wasabi_policy_document.read_only.json
}

resource "wasabi_bucket_policy" "backup_operations_data_bucket_ro" {
  bucket = wasabi_bucket.operations_data_bucket.id
  policy = data.wasabi_policy_document.read_only.json
}

############################################################################# A list of variables

variable "region" {
  type        = string
  description = "The Wasabi region to deploy Wasabi resources into"
  validation {
    condition     = contains(["us-east-1", "us-east-2", "us-central-1", "us-west-1", "eu-central-1", "eu-west-1", "eu-west-2", "ap-northeast-1", "ap-southeast-1", "ap-southeast-2", "ca-central-1"], var.region)
    error_message = "Invalid Wasabi region specified. Please refer to the Wasabi documentation for valid regions."
  }
}

variable "access_key" {
  type        = string
  description = "Wasabi access key"
  validation {
    condition = alltrue([
      can(regex("^[A-Z0-9]{20}$", var.access_key)),
      length(var.access_key) >= 20 // Minimum length check
    ])
    error_message = "Invalid Wasabi access key format. It should be at least 20 characters long and consist only of uppercase letters and numbers."
  }
}

variable "secret_key" {
  type        = string
  description = "Wasabi secret key"
  validation {
    condition = alltrue([
      can(regex("^[A-Za-z0-9/+=]{40}$", var.secret_key)),
      length(var.secret_key) >= 40 // Minimum length check
    ])
    error_message = "Invalid Wasabi secret key format. It should be at least 40 characters long and use a specific set of characters (alphanumeric, '/', '+', '=')."
  }
}

variable "user_names" {
  type        = list(string)
  default     = []
  description = "List of user names to create."

  validation {
    condition = alltrue([
      for name in var.user_names : can(regex("^[a-z0-9]{3,63}$", name))
    ])
    error_message = "Invalid user name(s) provided. Only lowercase letters and numbers are allowed. Each name must be between 3 and 63 characters long."
  }
}

############################################################################# Outputs

output "bucket_arns" {
  value = {
    sales       = wasabi_bucket.sales_data_bucket.arn
    marketing   = wasabi_bucket.marketing_data_bucket.arn
    engineering = wasabi_bucket.engineering_data_bucket.arn
    finance     = wasabi_bucket.finance_data_bucket.arn
    operations  = wasabi_bucket.operations_data_bucket.arn
  }
  description = "The ARNs of the created buckets"
}